Dockerize BOTH apps - the Python and the Node app.

1) Create appropriate images for both apps (two separate images!).
HINT: Have a brief look at the app code to configure your images correctly!

    cd node-app
    Create Dockfile
    docker build .

    cd python-app
    Create Dockfile
    docker build .

2) Launch a container for each created image, making sure,
that the app inside the container works correctly and is usable.

    docker run -p 3000:3000 -d dbe4528d35c0

    docker run -it 61071f0dbe2b

3) Re-create both containers and assign names to both containers.
Use these names to stop and restart both containers.

    docker stop quirky_mcnulty
    docker rm quirky_mcnulty
    docker run -p 3000:3000 -d --name serverApp dbe4528d35c0
    docker stop serverApp
    docker start serverApp

    docker stop romantic_hofstadter
    docker rm romantic_hofstadter
    docker run -it --name pythonApp 61071f0dbe2b
    docker stop pythonApp
    docker start -ai pythonApp

4) Clean up (remove) all stopped (and running) containers,
clean up all created images.

    docker stop serverApp
    docker rm serverApp
    docker rmi dbe4528d35c0

    docker stop pythonApp
    docker rm pythonApp
    docker rmi 61071f0dbe2b

5) Re-build the images - this time with names and tags assigned to them.

    docker build -t server:1.0 .

    docker build -t python:1.0 .

6) Run new containers based on the re-built images, ensuring that the containers
are removed automatically when stopped.

    docker run -p 3000:3000 -d --rm --name serverApp server:1.0
    docker stop serverApp
    docker rmi server:1.0

    docker run -it --rm --name pythonApp python:1.0
    docker rmi python:1.0
